{"version":3,"sources":["components/Cart/CartItem.module.css","components/UI/Notification.module.css","components/Cart/CartButton.module.css","components/UI/Card.module.css","components/Cart/Cart.module.css","components/Layout/MainHeader.module.css","components/Shop/Form.module.css","components/UI/Card.js","store/slices/cartSlice.js","components/Cart/CartItem.js","components/Cart/Cart.js","store/slices/uiSlice.js","components/Cart/CartButton.js","components/Layout/MainHeader.js","components/Layout/Layout.js","utils/constants/general.js","store/slices/cartActions.js","components/Shop/Form.js","components/UI/Notification.js","App.js","store/index.js","index.js"],"names":["module","exports","Card","props","className","classes","card","children","cartSlice","createSlice","name","initialState","items","totalQuantity","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","item","id","quantity","totalPrice","price","push","title","removeItemFormCart","filter","cartActions","actions","CartItem","dispatch","useDispatch","total","itemprice","details","onClick","Cart","cartItems","useSelector","cart","console","log","map","uiSlice","cartIsVisible","notification","toggle","showNotification","status","message","hideNotification","uiActions","CartButton","cartQuantity","button","badge","MainHeader","header","Layout","BASE_URL","getHandler","fetch","then","response","json","data","key","Form","useState","formState","setFromState","formHandler","e","value","target","Math","random","toString","form","onSubmit","preventDefault","method","body","JSON","stringify","ok","Error","catch","error","sendCartData","htmlFor","type","onChange","Notification","specialClasses","success","cssClasses","App","isShow","ui","useEffect","timer","setTimeout","clearTimeout","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.85e90547.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CartItem_item__3JrZY\",\"details\":\"CartItem_details__2LKQj\",\"quantity\":\"CartItem_quantity__l5gsp\",\"price\":\"CartItem_price__fbA3H\",\"itemprice\":\"CartItem_itemprice__1TUYc\",\"actions\":\"CartItem_actions__1PiVo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__2I75D\",\"error\":\"Notification_error__GASTn\",\"success\":\"Notification_success__3at5_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CartButton_button__3r8sU\",\"badge\":\"CartButton_badge__18JYi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3Douz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart\":\"Cart_cart__1-XEr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainHeader_header__Yud19\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__aCeeC\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <section\n      className={`${classes.card} ${props.className ? props.className : ''}`}\n    >\n      {props.children}\n    </section>\n  );\n};\n\nexport default Card;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  items: [],\n  totalQuantity: 0,\n};\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n\n      const existingItem = state.items.find((item) => item.id === newItem.id);\n\n      state.totalQuantity++;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: +newItem.price,\n          quantity: 1,\n          totalPrice: +newItem.price,\n          title: newItem.title,\n          // description: newItem.description,\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFormCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find((item) => item.id === id);\n      state.totalQuantity--;\n      existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter((item) => item.id !== id);\n      } else {\n        existingItem.quantity--;\n      }\n    },\n  },\n});\n\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;\n","import classes from \"./CartItem.module.css\";\nimport { useDispatch } from \"react-redux\";\nimport { cartActions } from \"../../store/slices/cartSlice\";\n\nconst CartItem = (props) => {\n  const dispatch = useDispatch();\n  const { title, quantity, total, price, id } = props.item;\n  \n\n  const minusHandler = () => {\n    dispatch(cartActions.removeItemFormCart(id));\n  };\n  const plusHandler = () => {\n    dispatch(\n      cartActions.addItemToCart({\n        id,\n        title,\n        price,\n      \n      })\n    );\n  };\n  return (\n    <li className={classes.item}>\n      <header>\n        <h3>{title}</h3>\n        <div className={classes.price}>\n          ${total} <span className={classes.itemprice}>(${price}/item)</span>\n        </div>\n      </header>\n      <div className={classes.details}>\n        <div className={classes.quantity}>\n          x <span>{quantity}</span>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={minusHandler}>-</button>\n          <button onClick={plusHandler}>+</button>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default CartItem;\n","import { useSelector } from \"react-redux\";\nimport Card from \"../UI/Card\";\nimport classes from \"./Cart.module.css\";\nimport CartItem from \"./CartItem\";\n\nconst Cart = (props) => {\n  const cartItems = useSelector((state) => state.cart.items);\nconsole.log(cartItems);\n  return (\n    <Card className={classes.cart}>\n      <h2>Your Shopping Cart</h2>\n      <ul>\n        {cartItems.map((item) => (\n          <CartItem\n            key={item.id}\n            item={{\n              id: item.id,\n              title: item.title,\n              quantity: item.quantity,\n              total: item.totalPrice,\n              price: item.price,\n            }}\n          />\n        ))}\n      </ul>\n    </Card>\n  );\n};\n\nexport default Cart;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  cartIsVisible: false,\n  notification: null,\n};\n\nconst uiSlice = createSlice({\n  name: \"ui\",\n  initialState: initialState,\n  reducers: {\n    toggle(state) {\n      state.cartIsVisible = !state.cartIsVisible;\n    },\n    showNotification(state, action) {\n      state.notification = {\n        status: action.payload.status,\n        title: action.payload.title,\n        message: action.payload.message,\n      };\n    },\n    hideNotification(state) {\n      state.notification = null\n    }\n  },\n});\n\nexport const uiActions = uiSlice.actions;\nexport default uiSlice;\n","import { useDispatch, useSelector } from 'react-redux'\nimport { uiActions } from '../../store/slices/uiSlice'\nimport classes from './CartButton.module.css'\n\nconst CartButton = (props) => {\n\tconst cartQuantity = useSelector((state) => state.cart.totalQuantity)\n\n\tconst dispatch = useDispatch()\n\n\tconst toggleHandler = () => {\n\t\tdispatch(uiActions.toggle()) // dispatch({type: 'increment', ....})\n\t}\n\n\treturn (\n\t\t<button className={classes.button} onClick={toggleHandler}>\n\t\t\t<span>My Cart</span>\n\t\t\t<span className={classes.badge}>{cartQuantity}</span>\n\t\t</button>\n\t)\n}\n\nexport default CartButton\n","import CartButton from '../Cart/CartButton';\nimport classes from './MainHeader.module.css';\n\nconst MainHeader = (props) => {\n  return (\n    <header className={classes.header}>\n      <h1>ReduxCart</h1>\n      <nav>\n        <ul>\n          <li>\n            <CartButton />\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainHeader;\n","import { Fragment } from 'react';\nimport MainHeader from './MainHeader';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainHeader />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","export const BASE_URL = 'https://cart-3462f-default-rtdb.firebaseio.com/'\n\n\n\n\n// function login () {\n//     return (dispatch) => {\n//           const data = fetch(`${BASE_URL}/cart.json`)  \n//           console.log(data);\n//           dispatch(cartActions.addItemToCart(data))\n//     }\n// }\n\n// dispatch(login())\n\n","import { BASE_URL } from \"../../utils/constants/general\";\nimport { cartActions } from \"./cartSlice\";\nimport { uiActions } from \"./uiSlice\";\n\nexport const sendCartData = (formState) => {\n  return (dispatch) => {\n    dispatch(\n      uiActions.showNotification({\n        status: \"pending\",\n        title: \"Sending...\",\n        message: \"Sending data o cart !\",\n      })\n    );\n    fetch(`${BASE_URL}/cart.json`, {\n      method: \"POST\",\n      body: JSON.stringify(formState),\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(\"Sending cart data failed\");\n        }\n        dispatch(\n          uiActions.showNotification({\n            status: \"success\",\n            title: \"Success !\",\n            message: \"Sent cart data successfully !\",\n          })\n        );\n        return response.json();\n      })\n      .then((data) => {})\n      .catch((error) => {\n        dispatch(\n          uiActions.showNotification({\n            status: \"error\",\n            title: \"Error !\",\n            message: \"Sending cart data failed !\",\n          })\n        );\n      });\n  };\n};\n\nexport const getHandler = () => {\n  return (dispatch) => {\n    fetch(`${BASE_URL}/cart.json`)\n      .then((response) => response.json())\n      .then((data) => {\n        for (let key in data) {\n          dispatch(\n            cartActions.addItemToCart({\n              id: key,\n              title: data[key].title,\n              price: +data[key].price,\n            })\n          );\n        }\n      });\n  };\n};\n","import classes from './Form.module.css'\nimport { useState } from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport { sendCartData } from '../../store/slices/cartActions'\nimport { getHandler } from '../../store/slices/cartActions'\nconst Form = () => {\n\tconst dispatch = useDispatch()\n\n\tconst [formState, setFromState] = useState({\n\t\ttitle: '',\n\t\tprice: '',\n\t\t\n\t})\n\n\tconst formHandler = (e) => {\n\t\tconst value = e.target.value\n\t\tsetFromState({\n\t\t\t...formState,\n\t\t\tid: Math.random().toString(),\n\t\t\t[e.target.name]: value,\n\t\t})\n\t}\n\n\tconst submitHandler = (e) => {\n\t\te.preventDefault()\n\n\t\tdispatch(sendCartData(formState))\n\t\tdispatch(getHandler())\n\t\tsetFromState({\n\t\t\ttitle: '',\n\t\t\tprice: '',\n\t\t\t\n\t\t})\n\t}\n\n\treturn (\n\t\t<section className={classes.form}>\n\n\t\t\t<form onSubmit={submitHandler}>\n\t\t\t\t<div>\n\t\t\t\t\t<label htmlFor='title'>Title</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tname='title'\n\t\t\t\t\t\tonChange={formHandler}\n\t\t\t\t\t\tid='title'\n\t\t\t\t\t\tvalue={formState.name}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<label htmlFor='price'>Price</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\tname='price'\n\t\t\t\t\t\tonChange={formHandler}\n\t\t\t\t\t\tid='price'\n\t\t\t\t\t\tvalue={formState.price}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\n\n\t\t\t\t<button>Add To Cart</button>\n\t\t\t</form>\n\t\t</section>\n\t)\n}\n\nexport default Form\n","import classes from \"./Notification.module.css\";\n\nconst Notification = (props) => {\n  let specialClasses = \"\";\n\n  if (props.status === \"error\") {\n    specialClasses = classes.error;\n  }\n  if (props.status === \"success\") {\n    specialClasses = classes.success;\n  }\n\n  const cssClasses = `${classes.notification} ${specialClasses}`;\n\n  return (\n    <section className={cssClasses}>\n      <h2>{props.title}</h2>\n      <p>{props.message}</p>\n    </section>\n  );\n};\n\nexport default Notification;","import { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Cart from './components/Cart/Cart'\nimport Layout from './components/Layout/Layout'\nimport Form from './components/Shop/Form'\nimport Notification from './components/UI/Notification'\nimport { getHandler } from './store/slices/cartActions'\n\nimport { uiActions } from './store/slices/uiSlice'\n\n// let isInitial = true\nfunction App() {\n\tconst dispatch = useDispatch()\n\tconst isShow = useSelector((state) => state.ui.cartIsVisible)\n\tconst notification = useSelector((state) => state.ui.notification)\n\tconst cartItems = useSelector((state) => state.cart.totalQuantity);\n\n\tuseEffect(() => {\n\t\tlet timer\n\t\tif (notification) {\n\t\t\ttimer = setTimeout(() => {\n\t\t\t\tdispatch(uiActions.hideNotification())\n\t\t\t}, 3000)\n\t\t}\n\n\t\treturn () => {\n\t\t\tclearTimeout(timer)\n\t\t}\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [notification])\n\n\tuseEffect(()=>{\n\t\tdispatch(getHandler())\n\t  },[])\n\t\n\n\n\treturn (\n\t\t<>\n\t\t\t{notification && (\n\t\t\t\t<Notification\n\t\t\t\t\tstatus={notification.status}\n\t\t\t\t\ttitle={notification.title}\n\t\t\t\t\tmessage={notification.message}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t<Layout>\n\t\t\t\t{isShow && <Cart />}\n\t\t\t\t<Form />\n\t\t\t\t{/* <Product/> */}\n\t\t\t</Layout>\n\t\t</>\n\t)\n}\n\nexport default App\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport cartSlice from \"./slices/cartSlice\";\nimport uiSlice from \"./slices/uiSlice\";\n\n\nconst store = configureStore({\n    reducer: {\n        ui: uiSlice.reducer,\n        cart: cartSlice.reducer\n    }\n})\n\nexport default store","import ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}